server.name = "headscale-web"
server.document-root = "/var/www/html"
server.use-ipv6 = "disable"
server.tag = "Headscale Web v" + env.VERSION
server.port = env.PORT
server.modules += ( "mod_rewrite", "mod_setenv", "mod_deflate" )

index-file.names = ( "index.html" )

mimetype.assign = (
  ".webmanifest" => "application/manifest+json",
  ".json"   => "application/json",
  ".ttf"   => "application/x-font-ttf",
  ".eot"   => "application/vnd.ms-fontobject",
  ".png"  => "image/png",
  ".jpg"  => "image/jpeg",
  ".jpeg" => "image/jpeg",
  ".webp" => "image/webp",
  ".ico"  => "image/x-icon",
  ".svg"  => "image/svg+xml",
  ".html" => "text/html",
  ".css"  => "text/css",
  ".js"   => "text/javascript",
  ".txt"  => "text/plain;charset=utf-8",
  ".woff"  => "font/woff",
  ".woff2" => "font/woff2"
)

debug.log-request-handling = "disabled"
static-file.etags = "enable"

deflate.allowed-encodings = ( "gzip", "deflate", "br", "zstd" )
deflate.mimetypes = (
  "application/json",
  "text/html",
  "text/css",
  "text/javascript",
  "image/png",
  "image/webp",
  "font/woff",
  "font/woff2"
)
deflate.cache-dir = "/var/www/cache"

url.rewrite-if-not-file = (
    "" => "/index.html"
)

setenv.set-response-header = (
    "x-frame-options" => "SAMEORIGIN",
    "x-content-type-options" => "nosniff",
    "x-xss-protection" => "0",
)

$HTTP["url"] =~ "^/assets/" {
     setenv.add-response-header += ("Cache-Control" => "public, max-age=31536000, s-maxage=31536000, immutable")
} else $HTTP["url"] =~ "^/workbox-*" {
     setenv.add-response-header += ("Cache-Control" => "public, max-age=31536000, s-maxage=31536000, immutable")
} else $HTTP["host"] =~ "" {
     setenv.add-response-header += ("Cache-Control" => "public, max-age=0, s-maxage=0, must-revalidate")
}